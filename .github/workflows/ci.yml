name: Build 0
on:
  push:
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/archlinux365/9318-archlinux-docker-root:latest
      volumes:
        - /home/runner/work/alterdir/alterdir:/tmp/alterdir
      options: "--privileged"
    steps:
      - uses: actions/checkout@v3
      - name: 1. Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.MY_SF_SSH }}
          known_hosts: "just-a-placeholder-so-we-dont-get-errors"
      - name: 2. build
        run: |
          # 展开
          echo "::group::Set github-actions bot"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "actions@github.com"
          echo "::group::Set Key & Hosts"
          cp -fv known_hosts /root/.ssh/known_hosts
          ssh-keygen -f "/root/.ssh/known_hosts" -R "github.com"
          ssh-keyscan "github.com" >> /root/.ssh/known_hosts
          cat /root/.ssh/known_hosts
          echo "::group::Prepare Build"
          ./init.sh
          
          # 定义字符数组
          characters=()
          for (( i = 48; i <= 122; i++ )); do
              if (( i <= 57 )) || (( i >= 97 )); then
                  characters+=($(printf \\$(printf '%03o' $i)))
              fi
          done
          # 定义每个批次中的线程数
          threads_per_batch=4
          # 计算总共的批次数
          total_batches=$(( ( ${#characters[@]} + threads_per_batch - 1) / threads_per_batch ))
          # 执行批次任务
          for (( i = 0; i < total_batches; i++ )); do
              for (( j = i*threads_per_batch; j < (i+1)*threads_per_batch; j++ )); do
                  if (( j < ${#characters[@]} )); then
                      env THREAD_NUM=$j ./build-for-github.sh --start "${characters[j]}" &
                  else
                      break
                  fi
              done
              # 等待当前批次中的所有任务完成
              wait
          done

          echo "::group::Push To GitHub"
          git config --global --add safe.directory /__w/10018-opendde-aur-database/10018-opendde-aur-database
          git add .
          git commit -a -m "add"
          git push origin HEAD
